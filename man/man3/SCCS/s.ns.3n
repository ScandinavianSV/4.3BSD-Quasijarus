h05476
s 00010/00014/00064
d D 6.2 86/05/12 19:36:15 karels 2 1
c an attempt at English
e
s 00078/00000/00000
d D 6.1 86/04/29 09:29:17 mckusick 1 0
c date and time created 86/04/29 09:29:17 by mckusick
e
u
U
t
T
I 1
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
.TH NS 3N "%Q%"
.UC 6
.SH NAME
ns_addr, ns_ntoa \- Xerox NS(tm)  address conversion routines
.SH SYNOPSIS
.nf
.B "#include <sys/types.h>
.B "#include <netns/ns.h>
.PP
.B "struct ns_addr ns_addr(cp)
.B "char *cp;
.PP
.B "char *ns_ntoa(ns)
.B "struct ns_addr ns;
.fi
.SH DESCRIPTION
The routine
D 2
.I ns_addr()
E 2
I 2
.I ns_addr
E 2
interprets character strings representing
XNS addresses, returning binary information suitable
for use in system calls.
D 2
.I ns_ntoa()
E 2
I 2
.I ns_ntoa
E 2
takes XNS addresses and returns ASCII
strings representing the address in a
notation in common use in the Xerox Development Environment:
.nf
	<network number>.<host number>.<port number>
.fi
Trailing zero fields are suppressed, and each number is printed in hexadecimal,
D 2
in suitable format as input to 
.I ns_addr(),
above.
E 2
I 2
in a format suitable for input to 
.IR ns_addr .
E 2
Any fields lacking super-decimal digits will have a
D 2
trailing ``H'' appended, so that the number is represented such that
applying
.I ns_addr()
will return you what you started with.
E 2
I 2
trailing ``H'' appended.
E 2
.PP
Unfortunately, no universal standard exists for representing XNS addresses.
An effort has been made to insure that
D 2
.I ns_addr()
E 2
I 2
.I ns_addr
E 2
be compatible with most formats in common use.
It will first separate an address into 1 to 3 fields using a single delimiter
chosen from
period (``.''),
colon (``:'') or pound-sign (``#'').
D 2
Each field is then examined for byte-separators (colon or period).
E 2
I 2
Each field is then examined for byte separators (colon or period).
E 2
If there are byte separators, each subfield separated is taken to be
a small hexadecimal number, and the entirety is taken as a network-byte-ordered
quantity to be zero extended in the high-network-order bytes.
Next, the field is inspected for hyphens, in which case
the field is assumed to be a number in decimal notation
with hyphens separating the millenia.
Next, the field is assumed to be a number:
It is interpreted
as hexadecimal if there is a leading ``0x'' (as in C),
D 2
a trailing ``H'' (as in Mesa), or any super-decimal digits present.
It is interpreted as octal is there is a leading ``0'' and no super-octal
digits.
E 2
I 2
a trailing ``H'' (as in Mesa), or there are any super-decimal digits present.
It is interpreted as octal is there is a leading ``0''
and there are no super-octal digits.
E 2
Otherwise, it is converted as a decimal number.
.SH "SEE ALSO"
hosts(5), networks(5),
.SH DIAGNOSTICS
None (see BUGS).
.SH BUGS
The string returned by
.I ns_ntoa
resides in a static memory area.
.br
.I ns_addr
should diagnose improperly formed input, and there should be an unambiguous
way to recognize this.
E 1
