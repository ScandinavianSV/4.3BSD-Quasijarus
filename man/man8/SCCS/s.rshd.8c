h16789
s 00001/00001/00163
d D 6.4 87/10/25 12:10:15 bostic 5 4
c step 1 is really step 2
e
s 00012/00012/00152
d D 6.3 86/05/24 11:03:19 karels 4 3
c more updates
e
s 00015/00014/00149
d D 6.2 85/06/03 14:17:09 lepreau 3 2
c ordder of locuser and remuser were reversed; connection for
c error messages was ambiguous/wrong.
e
s 00001/00001/00162
d D 6.1 85/04/27 15:59:00 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00163/00000/00000
d D 5.1 85/04/27 15:58:52 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
f b 
t
T
I 1
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH RSHD 8C "4 March 1983"
E 2
I 2
.TH RSHD 8C "%Q%"
E 2
.UC 5
.SH NAME
rshd \- remote shell server
.SH SYNOPSIS
.B /etc/rshd
.SH DESCRIPTION
.I Rshd
is the server for the 
.IR rcmd (3X)
routine and, consequently, for the
.IR rsh (1C)
program.  The server provides remote execution facilities
D 4
with authentication based on privileged port numbers.
E 4
I 4
with authentication based on privileged port numbers from trusted hosts.
E 4
.PP
.I Rshd
listens for service requests at the port indicated in
the ``cmd'' service specification; see
.IR services (5).
When a service request is received the following protocol
is initiated:
.IP 1)
The server checks the client's source port.
If the port is not in the range 0-1023, the server
aborts the connection.
.IP 2)
The server reads characters from the socket up
to a null (`\e0') byte.  The resultant string is
interpreted as an ASCII number, base 10.
.IP 3)
D 5
If the number received in step 1 is non-zero,
E 5
I 5
If the number received in step 2 is non-zero,
E 5
it is interpreted as the port number of a secondary
stream to be used for the 
.BR stderr .
A second connection is then created to the specified
port on the client's machine.  The source port of this
second connection is also in the range 0-1023.
.IP 4)
D 4
The server checks the client's source address.
If the address is associated with a host for which no
corresponding entry exists in the host name data base (see
.IR hosts (5)),
the server aborts the connection.
E 4
I 4
The server checks the client's source address
and requests the corresponding host name (see
.IR gethostbyaddr (3N),
.IR hosts (5)
and
.IR named (8)).
If the hostname cannot be determined,
the dot-notation representation of the host address is used.
E 4
.IP 5)
A null terminated user name of at most 16 characters
is retrieved on the initial socket.  This user name
D 3
is interpreted as a user identity to use on the
.BR server 's
E 3
I 3
is interpreted as the user identity on the
.BR client 's
E 3
machine.
.IP 6)
A null terminated user name of at most 16 characters
is retrieved on the initial socket.  This user name
D 3
is interpreted as the user identity on the
.BR client 's
E 3
I 3
is interpreted as a user identity to use on the
.BR server 's
E 3
machine.
.IP 7)
A null terminated command to be passed to a
shell is retrieved on the initial socket.  The length of
the command is limited by the upper bound on the size of
the system's argument list.  
.IP 8)
.I Rshd
then validates the user according to the following steps.
D 4
The remote user name is looked up in the password file
E 4
I 4
The local (server-end) user name is looked up in the password file
E 4
and a
.I chdir
is performed to the user's home directory.  If either
the lookup or 
.I chdir
fail, the connection is terminated.
If the user is not the super-user, (user id 0), the file 
.I /etc/hosts.equiv
is consulted for a list of hosts considered ``equivalent''.
If the client's host name is present in this file, the
authentication is considered successful.  If the lookup
fails, or the user is the super-user, then the file
.I .rhosts
in the home directory of the remote user is checked for
the machine name and identity of the user on the client's
machine.  If this lookup fails, the connection is terminated.
.IP 9)
D 3
A null byte is returned on the connection associated
with the
.B stderr 
E 3
I 3
A null byte is returned on the initial socket
E 3
and the command line is passed to the normal login
shell of the user.  The
shell inherits the network connections established
by
.IR rshd .
.SH DIAGNOSTICS
D 3
All diagnostic messages are returned on the connection
associated with the
.BR stderr ,
E 3
I 3
Except for the last one listed below,
all diagnostic messages
are returned on the initial socket,
E 3
after which any network connections are closed.
An error is indicated by a leading byte with a value of
1 (0 is returned in step 9 above upon successful completion
D 3
of all the steps prior to the command execution).
E 3
I 3
of all the steps prior to the execution of the login shell).
E 3
.PP
.B ``locuser too long''
.br
The name of the user on the client's machine is
longer than 16 characters.
.PP
.B ``remuser too long''
.br
The name of the user on the remote machine is
longer than 16 characters.
.PP
.B ``command too long ''
.br
The command line passed exceeds the size of the argument
list (as configured into the system).
.PP
D 3
.B ``Hostname for your address unknown.''
E 3
I 3
D 4
.B ``Host name for your address unknown.''
E 3
.br
No entry in the host name database existed for
the client's machine.
.PP
E 4
.B ``Login incorrect.''
.br
No password file entry for the user name existed.
.PP
.B ``No remote directory.''
.br
The 
.I chdir
command to the home directory failed.
.PP
.B ``Permission denied.''
.br
The authentication procedure described above failed.
.PP
.B ``Can't make pipe.''
.br
The pipe needed for the 
.BR stderr ,
wasn't created.
.PP
.B ``Try again.''
.br
A
.I fork
by the server failed.
.PP
D 3
.B ``/bin/sh: ...''
E 3
I 3
.B ``<shellname>: ...''
E 3
.br
D 3
The user's login shell could not be started.
E 3
I 3
The user's login shell could not be started.  This message is returned
on the connection associated with the
.BR stderr ,
and is not preceded by a flag byte.
E 3
.SH SEE ALSO
rsh(1C),
rcmd(3X)
.SH BUGS
The authentication procedure used here assumes the integrity
of each client machine and the connecting medium.  This is
insecure, but is useful in an ``open'' environment.
.PP
A facility to allow all data exchanges to be encrypted should be
present.
I 4
.PP
A more extensible protocol should be used.
E 4
E 1
