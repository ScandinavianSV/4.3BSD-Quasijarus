h30511
s 00003/00003/00082
d D 6.2 85/11/06 14:17:11 bloom 4 3
c everything should be declared as returning an int
e
s 00001/00001/00084
d D 6.1 85/05/15 15:03:23 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00018/00041/00067
d D 5.1 85/05/15 15:03:15 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00108/00000/00000
d D 4.1 85/05/15 15:03:09 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH PUTC 3S 
E 2
I 2
D 3
.TH PUTC 3S  "19 January 1983"
E 3
I 3
.TH PUTC 3S  "%Q%"
E 3
E 2
.AT 3
.SH NAME
putc, putchar, fputc, putw \- put character or word on a stream
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.B int putc(c, stream)
.br
.B char c;
.br
.SM
.B FILE
.B *stream;
.PP
D 4
.B putchar(c)
E 4
I 4
.B int putchar(c)
E 4
.PP
D 4
.B fputc(c, stream)
E 4
I 4
.B int fputc(c, stream)
E 4
.br
.SM
.B FILE
.B *stream;
.PP
D 4
.B putw(w, stream)
E 4
I 4
.B int putw(w, stream)
E 4
.br
.SM
.B FILE
.B *stream;
.SH DESCRIPTION
.I Putc
appends the character
.I c
to the named output
.IR stream .
It returns the character written.
.PP
D 2
.I Putchar(c)
E 2
I 2
.IR Putchar ( c )
E 2
is defined as 
D 2
.I "putc(c, stdout)."
E 2
I 2
.IR putc ( c ,
.BR stdout ).
E 2
.PP
.I Fputc
behaves like 
D 2
.I putc,
E 2
I 2
.IR putc ,
E 2
but is a genuine function rather than a macro.
D 2
It may be used to save on object text.
E 2
.PP
.I Putw
D 2
appends word 
(i.e.
E 2
I 2
appends word (that is,
E 2
.BR int )
.I w
to the output
.IR stream .
It returns the word written.
.I Putw
neither assumes nor causes special alignment in the file.
D 2
.PP
The standard stream
.I stdout
is normally buffered if and only if the
output does not refer to a terminal;
this default may be changed by
.IR setbuf (3).
The standard stream
.I stderr
is by default unbuffered unconditionally,
but use of
.I freopen
(see
.IR fopen (3))
will cause it to become buffered;
.IR setbuf ,
again, will set the state to whatever is desired.
When an output stream is unbuffered information appears on the
destination file or terminal as soon as written;
when it is buffered many characters are saved up and written as a block.
.I Fflush
(see 
.IR fclose (3))
may be used to force the block out early.
E 2
.SH "SEE ALSO"
D 2
fopen(3), fclose(3), getc(3),
puts(3), printf(3),
fread(3)
E 2
I 2
fopen(3S),
fclose(3S),
getc(3S),
puts(3S),
printf(3S),
fread(3S)
E 2
.SH DIAGNOSTICS
These functions return the constant
.SM
.B EOF
D 2
upon error.
Since this is a good integer,
.IR  ferror (3)
E 2
I 2
upon error.  Since this is a good integer,
.IR  ferror (3S)
E 2
should be used to detect 
.I putw
errors.
.SH BUGS
Because it is implemented as a macro,
.I putc
treats a
.I stream
D 2
argument with side effects improperly.
In particular
`putc(c, *f++);'
E 2
I 2
argument with side effects improperly.  In particular
.IP "putc(c, *f++);"
.PP
E 2
doesn't work sensibly.
.PP
Errors can occur long after the call to
D 2
.I putc.
E 2
I 2
.IR putc .
E 2
E 1
