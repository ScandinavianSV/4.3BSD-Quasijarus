h62771
s 00001/00001/00041
d D 6.3 85/08/26 23:32:40 mckusick 4 3
c update error messages (mostly from sun!guy)
e
s 00001/00001/00041
d D 6.2 85/06/28 17:01:19 sechrest 3 2
c Improved english
e
s 00001/00001/00041
d D 6.1 85/05/15 11:56:27 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00042/00000/00000
d D 5.1 85/05/15 11:56:19 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH GETPGRP 2 "2 July 1983"
E 2
I 2
.TH GETPGRP 2 "%Q%"
E 2
.UC 5
.SH NAME
getpgrp \- get process group
.SH SYNOPSIS
.ft B
.nf
pgrp = getpgrp(pid)
D 4
int prgp;
E 4
I 4
int pgrp;
E 4
int pid;
.fi
.ft R
.SH DESCRIPTION
The process group of the specified process is returned by
.I getpgrp.
If
.I pid
is zero, then the call applies to the current process.
.PP
Process groups are used for distribution of signals, and
by terminals to arbitrate requests for their input: processes
D 3
which have the same process group as the terminal are foreground
E 3
I 3
that have the same process group as the terminal are foreground
E 3
and may read, while others will block with a signal if they attempt
to read.
.PP
This call is thus used by programs such as
.IR csh (1)
to create
process groups
in implementing job control.
The TIOCGPGRP and TIOCSPGRP calls
described in
.IR tty (4)
are used to get/set the process group of the control terminal.
.SH "SEE ALSO"
setpgrp(2), getuid(2), tty(4)
E 1
