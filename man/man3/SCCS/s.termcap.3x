h37402
s 00029/00017/00136
d D 6.2 87/09/14 15:43:53 jak 4 3
c upgrade for .termcap and TERMPATH
e
s 00006/00004/00147
d D 6.1 85/05/15 15:55:39 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00008/00007/00143
d D 5.1 85/05/15 15:55:15 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00150/00000/00000
d D 4.1 85/05/15 15:54:56 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH TERMCAP 3
E 2
I 2
D 3
.TH TERMCAP 3X "9 February 1983"
E 3
I 3
.TH TERMCAP 3X "%Q%"
E 3
E 2
.UC 4
.SH NAME
tgetent, tgetnum, tgetflag, tgetstr, tgoto, tputs \- terminal independent operation routines
.SH SYNOPSIS
.nf
.B char PC;
.B char *BC;
.B char *UP;
.B short ospeed;
.PP
.B tgetent(bp, name)
.B char *bp, *name;
.PP
.B tgetnum(id)
.B char *id;
.PP
.B tgetflag(id)
.B char *id;
.PP
.B char *
.B tgetstr(id, area)
.B char *id, **area;
.PP
.B char *
.B tgoto(cm, destcol, destline)
.B char *cm;
.PP
.B tputs(cp, affcnt, outc)
.B register char *cp;
.B int affcnt;
.B int (*outc)();
.fi
.SH DESCRIPTION
D 4
These functions extract and use capabilities from the terminal capability data
base
E 4
I 4
These functions extract and use capabilities from a terminal capability data
base, usually /etc/termcap, the format of which is described in
E 4
.IR termcap (5).
These are low level routines;
see
D 2
.IR curses (3)
E 2
I 2
.IR curses (3X)
E 2
for a higher level package.
.PP
.I Tgetent
extracts the entry for terminal
.I name
into the buffer at
.I bp.
.I Bp
should be a character buffer of size
D 4
1024 and must be retained through all subsequent calls
to
E 4
I 4
1024 and must be retained through all subsequent calls to
E 4
.I tgetnum,
.I tgetflag,
and
.I tgetstr.
.I Tgetent
D 4
returns \-1 if it cannot open the
.I termcap
file, 0 if the terminal name given does not have an entry,
E 4
I 4
returns \-1 if none of the termcap
data base files could be opened,
0 if the terminal name given does not have an entry,
E 4
and 1 if all goes well.
It will look in the environment for a TERMCAP variable.
If found, and the value does not begin with a slash,
and the terminal type
D 4
.B name
E 4
I 4
.I name
E 4
is the same as the environment string TERM,
D 4
the TERMCAP string is used instead of reading the termcap file.
If it does begin with a slash, the string is used as a path name rather than
.I /etc/termcap.
E 4
I 4
the TERMCAP string is used instead of reading a termcap file.
If it does begin with a slash, the string is used as a path name
of the termcap file to search.
If TERMCAP does not begin with a slash and
.I name
is different from TERM,
.I tgetent
searches the files $HOME/.termcap and /etc/termcap,
in that order, unless the environment variable TERMPATH exists,
in which case it specifies a list of file pathnames
(separated by spaces or colons) to be searched instead.
Whenever multiple files are searched and a
.B tc
field occurs in the requested entry, the entry it names must be found
in the same file or one of the succeeding files.
E 4
This can speed up entry into programs that call
.IR tgetent ,
D 4
as well as to help debug new terminal descriptions
or to make one for your terminal if you can't write the file
.I /etc/termcap.
E 4
I 4
as well as help debug new terminal descriptions
or make one for your terminal if you can't write the file /etc/termcap.
E 4
.PP
.I Tgetnum
gets the numeric value of capability
.I id,
returning \-1 if is not given for the terminal.
.I Tgetflag
returns 1 if the specified capability is present in
the terminal's entry, 0 if it is not.
.I Tgetstr
D 3
gets the string value of capability
E 3
I 3
returns the string value of the capability
E 3
.I id,
D 3
placing it in the buffer at
E 3
I 3
places it in the buffer at
E 3
.I area,
D 3
advancing the
E 3
I 3
and advances the
E 3
.I area
pointer.
It decodes the abbreviations for this field described in
.IR termcap (5),
except for cursor addressing and padding information.
I 3
.I Tgetstr
returns NULL if the capability was not found.
E 3
.PP
.I Tgoto
returns a cursor addressing string decoded from
.I cm
to go to column
.I destcol
in line
.I destline.
It uses the external variables
.B UP
(from the \fBup\fR capability)
and
.B BC
(if \fBbc\fR is given rather than \fBbs\fR)
if necessary to avoid placing \fB\en\fR, \fB^D\fR or \fB^@\fR in
the returned string.
(Programs which call tgoto should be sure to turn off the XTABS bit(s),
D 2
since tgoto may now output a tab.
E 2
I 2
since
.I tgoto
may now output a tab.
E 2
Note that programs using termcap should in general turn off XTABS
D 4
anyway since some terminals use control I for other functions,
E 4
I 4
anyway since some terminals use control-I for other functions,
E 4
such as nondestructive space.)
If a \fB%\fR sequence is given which is not understood, then
.I tgoto
returns \*(lqOOPS\*(rq.
.PP
.I Tputs
decodes the leading padding information of the string
D 2
.I cp;
E 2
I 2
.IR cp ;
E 2
.I affcnt
gives the number of lines affected by the operation, or 1 if this is
not applicable,
.I outc
is a routine which is called with each character in turn.
The external variable
.I ospeed
should contain the output speed of the terminal as encoded by
D 2
.I stty (2).
E 2
I 2
.IR stty (3).
E 2
The external variable
.B PC
should contain a pad character to be used (from the \fBpc\fR capability)
if a null (\fB^@\fR) is inappropriate.
.SH FILES
.ta \w'/usr/lib/libtermcap.a  'u
D 4
/usr/lib/libtermcap.a	\-ltermcap library
E 4
I 4
/usr/lib/libtermcap.a	\-ltermcap library (also known as \-ltermlib)
E 4
.br
D 4
/etc/termcap	data base
E 4
I 4
/etc/termcap	standard terminal capability data base
.br
$HOME/.termcap	user's terminal capability data base
E 4
.DT
.SH SEE ALSO
D 2
ex(1), curses(3), termcap(5)
E 2
I 2
ex(1), curses(3X), termcap(5)
E 2
.SH AUTHOR
William Joy
D 2
.SH BUGS
E 2
E 1
