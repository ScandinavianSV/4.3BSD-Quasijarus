h48936
s 00001/00001/00038
d D 6.3 86/05/14 14:24:49 karels 4 3
c typo
e
s 00012/00007/00027
d D 6.2 86/05/14 11:11:56 karels 3 2
c sigmask
e
s 00001/00001/00033
d D 6.1 85/05/15 12:00:36 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00034/00000/00000
d D 5.1 85/05/15 12:00:31 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH SIGBLOCK 2 "15 June 1983"
E 2
I 2
.TH SIGBLOCK 2 "%Q%"
E 2
.UC 5
.SH NAME
sigblock \- block signals
.SH SYNOPSIS
.nf
I 3
.B #include <signal.h>

E 3
.B sigblock(mask);
.B int mask;
I 3

.B mask = sigmask(signum)
E 3
.SH DESCRIPTION
.I Sigblock
causes the signals specified in
.I mask
to be added to the set of signals currently
D 3
being blocked from delivery.  Signal
.I i
is blocked if the
.IR i -th
bit in 
E 3
I 3
being blocked from delivery.
Signals are blocked if the
D 4
corresding bit in 
E 4
I 4
corresponding bit in 
E 4
E 3
.I mask
D 3
is a 1.
E 3
I 3
is a 1; the macro
.I sigmask
is provided to construct the mask for a given
.IR signum .
E 3
.PP
It is not possible to block SIGKILL,
SIGSTOP, or SIGCONT;  this restriction is silently
imposed by the system.
.SH "RETURN VALUE
The previous set of masked signals is returned.
.SH "SEE ALSO"
D 3
kill(2), sigvec(2), sigsetmask(2),
E 3
I 3
kill(2), sigvec(2), sigsetmask(2)
E 3
E 1
