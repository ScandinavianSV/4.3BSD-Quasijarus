h02319
s 00001/00001/00043
d D 6.1 85/05/09 19:16:42 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00006/00008/00038
d D 5.1 85/05/09 19:16:20 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00046/00000/00000
d D 4.1 85/05/09 19:15:39 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH NICE 2 
E 2
I 2
D 3
.TH NICE 3C "1 April 1983"
E 3
I 3
.TH NICE 3C "%Q%"
E 3
E 2
.UC 4
.SH NAME
nice \- set program priority
.SH SYNOPSIS
.B nice(incr)
.SH DESCRIPTION
I 2
.ft B
This interface is obsoleted by setpriority(2).
.ft R
.PP
E 2
The scheduling
priority of the process is augmented by
.IR incr .
Positive priorities get less
service than normal.
Priority 10 is recommended to users
who wish to execute long-running programs
without flak from the administration.
.PP
Negative increments are ignored except on behalf of 
the super-user.
The priority is limited to the range
\-20 (most urgent) to 20 (least).
.PP
The priority of a process is
passed to a child process by
.IR fork (2).
For a privileged process to return to normal priority
from an unknown state,
.I nice
should be called successively with arguments
\-40 (goes to priority \-20 because of truncation),
20 (to get to 0),
then 0 (to maintain compatibility with previous versions
of this call).
.SH "SEE ALSO"
D 2
nice(1), fork(2), renice(8)
.SH "ASSEMBLER (PDP-11)"
(nice = 34.)
.br
(priority in r0)
.br
.B sys nice
E 2
I 2
nice(1), setpriority(2), fork(2), renice(8)
E 2
E 1
