h21814
s 00001/00005/00047
d D 6.4 86/05/13 09:41:43 karels 4 3
c who can't count?  It's one syscall!
e
s 00001/00001/00051
d D 6.3 86/05/12 23:02:27 mckusick 3 2
c format
e
s 00001/00001/00051
d D 6.2 86/04/27 03:49:03 donn 2 1
c Mention the return type --  don't confuse lint.
e
s 00052/00000/00000
d D 6.1 86/01/09 19:20:12 mckusick 1 0
c 4.3BSD version
e
u
U
t
T
I 1
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)%W% (Berkeley) %G%
.\"
.TH UALARM 3  "%Q%"
.UC 6
.SH NAME
ualarm \- schedule signal after specified time
.SH SYNOPSIS
.nf
D 2
.B ualarm(value, interval)
E 2
I 2
.B unsigned ualarm(value, interval)
E 2
.B unsigned value;
.B unsigned interval;
.fi
.SH DESCRIPTION
.ft B
This is a simplified interface to setitimer(2).
.ft R
.PP
.I Ualarm
causes signal SIGALRM, see
.IR signal (3C),
to be sent to the invoking process
in a number of microseconds given by the
.I value
argument.
Unless caught or ignored, the signal terminates the process.
.PP
If the
.I interval
argument is non-zero, the SIGALRM signal will be sent
to the process every
.I interval
microseconds after the timer expires (e.g. after
.I value
microseconds have passed).
.PP
Because of scheduling delays,
resumption of execution of when the signal is
caught may be delayed an arbitrary amount.
The longest specifiable delay time (on the vax) is 2147483647 microseconds.
.PP
The return value is the amount of time previously remaining in the alarm clock.
D 3
.sh BUGS
E 3
I 3
D 4
.SH BUGS
E 3
This routine is expensive to use because it is implemented using 
.IR setitimer (2)
and does eight system calls each time it is invoked.
E 4
.SH "SEE ALSO"
getitimer(2), setitimer(2), sigpause(2), sigvec(2), signal(3C), sleep(3),
D 4
alarm(3), ualarm(3)
E 4
I 4
alarm(3), usleep(3)
E 4
E 1
