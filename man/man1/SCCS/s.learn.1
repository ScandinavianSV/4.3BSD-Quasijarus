h01590
s 00036/00012/00092
d D 6.2 86/05/15 16:43:01 bloom 4 3
c update from John Kunze (jak@opal)
e
s 00001/00001/00103
d D 6.1 85/04/29 17:48:18 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00059/00032/00045
d D 5.1 85/04/29 17:48:06 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00077/00000/00000
d D 4.1 85/04/29 17:47:58 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH LEARN 1
E 2
I 2
D 3
.TH LEARN 1 "26 April 1983"
E 3
I 3
.TH LEARN 1 "%Q%"
E 3
E 2
.AT 3
.SH NAME
learn \- computer aided instruction about UNIX
.SH SYNOPSIS
.B learn
[
.BR \- directory
]
D 2
[ subject [ lesson  [ speed ] ] ]
E 2
I 2
[ subject [ lesson ] ]
E 2
.SH DESCRIPTION
.I Learn
D 2
gives CAI courses and practice in the use of UNIX.
To get started
simply type `learn'.
E 2
I 2
gives Computer Aided Instruction courses and
practice in the use of UNIX, the C Shell,
and the Berkeley text editors.
To get started simply type
.BR learn .
E 2
D 4
The program will ask questions to find out what
you want to do.
E 4
I 4
If you had used
.I learn
before and left your last session without completing a subject,
the program will use information in $HOME/.learnrc to start you up
in the same place you left off.
Your first time through,
.I learn
will ask questions to find out what you want to do.
E 4
D 2
The questions may be bypassed by naming a
.I subject,
and the last
E 2
I 2
Some questions may be bypassed by naming a
.IR subject ,
and more yet by naming a
.IR lesson .
You may enter the
E 2
.I lesson
D 2
number that
E 2
I 2
as a number that
E 2
.I learn
D 2
told you in the previous session.
You may also include a
.I speed
number that was given with the lesson number
(but without the parentheses that
E 2
I 2
gave you in a previous session.
If you do not know the lesson number,
you may enter the
.I lesson
as a word, and
E 2
.I learn
D 2
places around the speed number).
If
E 2
I 2
will look for the first lesson containing it.
If the
E 2
.I lesson
D 2
is `\-', 
E 2
I 2
is `\fB\-\fP',
E 2
.I learn
prompts for each lesson;
this is useful for debugging.
.PP
The
D 2
.I subjects
E 2
I 2
.IR subject \|'s
E 2
presently handled are
D 2
.sp
E 2
I 2
.if n .sp 1v
.if t .sp .5v
E 2
.nf
D 2
      editor
      eqn
      files
      macros
      morefiles
      C
E 2
I 2
D 4
           files
           editor
           vi
           morefiles
           macros
           eqn
           C
E 4
I 4
.in +0.5i
files
editor
vi
morefiles
macros
eqn
C
.in -0.5i
E 4
E 2
.fi
.PP
D 2
The special command
`bye' terminates a 
E 2
I 2
There are a few special commands.
The command `bye' terminates a 
E 2
.I learn
D 2
session.
E 2
I 2
session and `where' tells you of your progress,
with `where\0m' telling you more.
The command `again' re-displays the text of the lesson
and `again\0\fIlesson\fP' lets you review
.IR lesson .
I 4
There is no way for
.I learn
to tell you the answers it expects in English, however,
the command `hint' prints the last part of the lesson script
used to evaluate a response, while `hint m' prints the
whole lesson script.
This is useful for debugging
lessons and might possibly give you an idea about what it expects.
E 4
E 2
.PP
The
.BI \- directory
option allows one to exercise a script in
a nonstandard place.
.SH FILES
D 2
/usr/learn and all dependent directories and files
E 2
I 2
D 4
.nf
E 4
/usr/lib/learn	subtree for all dependent directories and files
I 4
.br
E 4
/usr/tmp/pl\(**	playpen directories
I 4
.br
$HOME/.learnrc	startup information
E 4
.SH SEE ALSO
csh(1), ex(1)
I 4
.br
B. W. Kernighan and M. E. Lesk, \fILEARN \- Computer-Aided Instruction on UNIX\fR
E 4
E 2
.SH BUGS
The main strength of
.I learn,
D 2
that it asks the student to use the real
UNIX, also makes possible baffling mistakes.
E 2
I 2
that it asks the student to use the real UNIX,
also makes possible baffling mistakes.
E 2
It is helpful, especially for nonprogrammers,
to have a UNIX initiate near at hand during the first
sessions.
.PP
Occasionally lessons are incorrect, sometimes because the local version
of a command operates in a non-standard way.
I 4
Occasionally a lesson script does not recognize all the different
correct responses, in which case the `hint' command may be useful.
E 4
D 2
Such lessons may be skipped,
E 2
I 2
Such lessons may be skipped with the `skip' command,
E 2
D 4
but it takes some sophistication to recognize
the situation.
E 4
I 4
but it takes some sophistication to recognize the situation.
E 4
I 2
.PP
To find a
.I lesson
given as a word,
.I learn
does a simple
.IR fgrep (1)
through the lessons.
It is unclear whether this sort
of subject indexing is better than none.
.PP
Spawning a new shell is required for each of many
user and internal functions.
I 4
.PP
The `vi' lessons are provided separately from the others.
To use them see your system administrator.
E 4
E 2
E 1
