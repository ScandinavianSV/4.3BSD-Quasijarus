h54640
s 00002/00002/00068
d D 6.3 86/05/22 11:56:14 anne 5 4
c grammar
e
s 00002/00002/00068
d D 6.2 85/06/28 16:24:47 sechrest 4 3
c Improved English
e
s 00001/00001/00069
d D 6.1 85/05/09 16:03:32 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00056/00038/00014
d D 5.1 85/05/09 16:03:20 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00052/00000/00000
d D 4.1 85/05/09 16:03:10 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH CLOSE 2 
E 2
I 2
D 3
.TH CLOSE 2 "27 July 1983"
E 3
I 3
.TH CLOSE 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
close \- close a file
E 2
I 2
close \- delete a descriptor
E 2
.SH SYNOPSIS
D 2
.B close(fildes)
E 2
I 2
.B close(d)
.br
.B "int d;"
E 2
.SH DESCRIPTION
D 2
Given
a file descriptor such as returned from an
.I open,
.I creat,
.I dup
or
.IR pipe (2)
call,
.I close
closes the associated file.
A close of all files is automatic on
.I exit,
E 2
I 2
The
\fIclose\fP call deletes a descriptor from the per-process object
reference table.
If this is the last reference to the underlying object, then
it will be deactivated.
For example, on the last close of a file
the current \fIseek\fP pointer associated with the file is lost;
on the last close of a
.IR socket (2)
associated naming information and queued data are discarded;
on the last close of a file holding an advisory lock
D 5
the lock is released; see further
.IR flock (2).
E 5
I 5
the lock is released (see further
.IR flock (2)\fR).
E 5
.PP
A close of all of a process's descriptors is automatic on
.IR exit ,
E 2
but since
D 2
there is a limit on the number of open files per process,
E 2
I 2
there is a limit on the number of active descriptors per process,
E 2
.I close
D 2
is necessary for programs which deal with many files.
E 2
I 2
D 4
is necessary for programs which deal with many descriptors.
E 4
I 4
is necessary for programs that deal with many descriptors.
E 4
E 2
.PP
D 2
Files are closed upon termination of a process, and
certain high-numbered file descriptors are closed by
.IR exec (2),
and it is possible to arrange for others to be closed
(see FIOCLEX in
.IR ioctl (2)).
E 2
I 2
When a process forks (see
.IR fork (2)),
all descriptors for the new child process reference the same
objects as they did in the parent before the fork.
If a new process is then to be run using
.IR execve (2),
the process would normally inherit these descriptors.  Most
of the descriptors can be rearranged with
.IR dup2 (2)
or deleted with
.I close
before the
.I execve
is attempted, but if some of these descriptors will still
be needed if the execve fails, it is necessary to arrange for them
to be closed if the execve succeeds.
D 4
For this reason, the call ``fcntl(d, F_SETFD, 1)'' is provided
E 4
I 4
For this reason, the call ``fcntl(d, F_SETFD, 1)'' is provided,
E 4
which arranges that a descriptor will be closed after a successful
execve; the call ``fcntl(d, F_SETFD, 0)'' restores the default,
which is to not close the descriptor.
.SH "RETURN VALUE
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and the global integer variable
.I errno
is set to indicate the error.
.SH ERRORS
.I Close
will fail if:
.TP 15
[EBADF]
\fID\fP is not an active descriptor.
E 2
.SH "SEE ALSO"
D 2
creat(2), open(2), pipe(2), exec(2), ioctl(2)
.SH DIAGNOSTICS
Zero is returned if a file is closed;
\-1 is returned for an unknown file descriptor.
.SH "ASSEMBLER (PDP-11)"
(close = 6.)
.br
(file descriptor in r0)
.br
.B sys close
.PP
.SH BUGS
A file cannot be closed while there are pages which have been
.I vread
but not referenced.
E 2
I 2
accept(2), flock(2), open(2), pipe(2), socket(2), socketpair(2),
execve(2), fcntl(2)
E 2
E 1
