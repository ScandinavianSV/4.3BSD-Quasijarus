h54082
s 00001/00001/00046
d D 6.1 85/04/27 14:16:58 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00007/00010/00040
d D 5.1 85/04/27 14:16:26 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00050/00000/00000
d D 4.1 85/04/27 14:16:00 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH MAKEKEY 8 "4/1/81"
E 2
I 2
D 3
.TH MAKEKEY 8 "4 February 1983"
E 3
I 3
.TH MAKEKEY 8 "%Q%"
E 3
E 2
.AT 3
.SH NAME
makekey \- generate encryption key
.SH SYNOPSIS
.B /usr/lib/makekey
.SH DESCRIPTION
.I Makekey
improves the usefulness of encryption schemes depending on a key by
increasing the amount of time required to search the key space.  It
reads 10 bytes from its standard input, and writes 13 bytes on its
standard output.  The output depends on the input in a way intended to
D 2
be difficult to compute (i.e. to require a substantial fraction of a
second).
E 2
I 2
be difficult to compute (that is, to require a substantial fraction of
a second).
E 2
.PP
The first eight input bytes
(the
.IR "input key" )
can be arbitrary ASCII characters.
D 2
The last 
two (the
E 2
I 2
The last two (the
E 2
.IR salt )
are best chosen from the set of digits, upper- and lower-case
letters, and `.' and `/'.
The salt characters are repeated as the first two characters of the output.
The remaining 11 output characters are chosen from the same set as the salt
and constitute the
.I "output key."
.PP
The transformation performed is essentially the following:
the salt is used to select one of 4096 cryptographic
machines all based on the National Bureau of Standards
DES algorithm, but modified in 4096 different ways.
Using the input key as key,
D 2
a constant string is fed into the machine and recirculated
a number of times.
E 2
I 2
a constant string is fed into the machine and recirculated a number of times.
E 2
The 64 bits that come out are distributed into the
66 useful key bits in the result.
.PP
.I Makekey
D 2
is intended for programs that perform encryption
(e.g.
E 2
I 2
is intended for programs that perform encryption (for instance,
E 2
.I ed
and
.IR crypt (1)).
D 2
Usually its input and output will be pipes.
E 2
I 2
Usually makekey's input and output will be pipes.
E 2
.SH SEE ALSO
crypt(1), ed(1)
E 1
