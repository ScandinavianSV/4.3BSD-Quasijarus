h32831
s 00001/00001/00178
d D 6.2 86/05/13 07:51:54 mckusick 4 3
c name change (forwards into the past)
e
s 00001/00001/00178
d D 6.1 85/05/15 15:51:26 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00086/00038/00093
d D 5.1 85/05/15 15:50:54 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00131/00000/00000
d D 4.1 85/05/15 15:50:16 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH STDIO 3S 
E 2
I 2
D 3
.TH INTRO 3S "18 July 1983"
E 3
I 3
D 4
.TH INTRO 3S "%Q%"
E 4
I 4
.TH STDIO 3S "%Q%"
E 4
E 3
E 2
.UC 4
.SH NAME
stdio \- standard buffered input/output package
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.SM
.B FILE
.B *stdin;
.br
.SM
.B FILE
.B *stdout;
.br
.SM
.B FILE
.B *stderr;
.SH DESCRIPTION
D 2
The functions described in Sections 3S constitute an efficient
user-level buffering scheme.
The in-line macros
E 2
I 2
The functions described in section 3S constitute a user-level buffering
scheme.  The in-line macros
E 2
.I getc
and
D 2
.IR  putc (3)
handle characters quickly.
The higher level routines
.I "gets, fgets, scanf, fscanf, fread,"
.I "puts, fputs, printf, fprintf, fwrite"
E 2
I 2
.IR  putc (3S)
handle characters quickly.  The higher level routines
.IR gets ,
.IR fgets ,
.IR scanf ,
.IR fscanf ,
.IR fread ,
.IR puts ,
.IR fputs ,
.IR printf ,
.IR fprintf ,
.IR fwrite
E 2
all use
.I getc
and
D 2
.I putc;
E 2
I 2
.IR putc ;
E 2
they can be freely intermixed.
.PP
A file with associated buffering is called a
D 2
.I stream,
E 2
I 2
.IR stream ,
E 2
and is declared to be a pointer to a defined type
.SM
D 2
.B FILE.
.IR  Fopen (3)
E 2
I 2
.BR FILE .
.IR  Fopen (3S)
E 2
creates certain descriptive data for a stream
D 2
and returns a pointer to designate the stream in all
further transactions.
There are three normally open streams with constant
pointers declared in
E 2
I 2
and returns a pointer to designate the stream in all further transactions.
There are three normally open streams with constant pointers declared in
E 2
the include file and associated with the standard open files:
.TP 10n
D 2
.BR stdin
E 2
I 2
.B stdin
E 2
standard input file
.br
.ns
.TP
.B stdout
standard output file
.br
.ns
.TP
D 2
.BR stderr
E 2
I 2
.B stderr
E 2
standard error file
.PP
A constant `pointer'
.SM
.B NULL
(0)
designates no stream at all.
.PP
An integer constant
.SM
.B EOF
D 2
(\-1) is returned
upon end of file or error by integer functions that
E 2
I 2
(\-1) is returned upon end of file or error by integer functions that
E 2
deal with streams.
.PP
Any routine that uses the standard input/output package
D 2
must include the header file <stdio.h> of pertinent
macro definitions.
E 2
I 2
must include the header file
.RI < stdio.h >
of pertinent macro definitions.
E 2
The functions and constants mentioned in sections labeled 3S
D 2
are declared in the include file
and need no further declaration.
E 2
I 2
are declared in the include file and need no further declaration.
E 2
The constants, and the following `functions' are
D 2
implemented as macros; redeclaration of these names
is perilous:
.I getc,
.I getchar,
.I putc,
.I putchar,
.I feof,
.I ferror,
E 2
I 2
implemented as macros; redeclaration of these names is perilous:
.IR getc ,
.IR getchar ,
.IR putc ,
.IR putchar ,
.IR feof ,
.IR ferror ,
E 2
.IR fileno .
.SH "SEE ALSO"
D 2
open(2), close(2), read(2), write(2)
E 2
I 2
open(2), close(2), read(2), write(2), fread(3S), fseek(3S), f*(3S)
E 2
.SH DIAGNOSTICS
The value
.SM
.B EOF
is returned uniformly to indicate that a
.SM
.B FILE
pointer has not been initialized with
D 2
.I fopen,
input (output) has been attempted on an output (input) stream,
or a
E 2
I 2
.IR fopen ,
input (output) has been attempted on an output (input) stream, or a
E 2
.SM
.B FILE
pointer designates corrupt or otherwise unintelligible
.SM
.B FILE
data.
.PP
For purposes of efficiency, this implementation of the standard library
has been changed to line buffer output to a terminal by default and attempts
to do this transparently by flushing the output whenever a 
.IR read (2)
from the standard input is necessary.  This is almost always transparent,
but may cause confusion or malfunctioning of programs which use
standard i/o routines but use
.IR read (2)
themselves to read from the standard input.
.PP
In cases where a large amount of computation is done after printing
part of a line on an output terminal, it is necessary to
D 2
.IR fflush (3)
E 2
I 2
.IR fflush (3S)
E 2
the standard output before going off and computing so that the output
will appear.
I 2
.SH BUGS
The standard buffered functions do not interact well with certain other
library and system functions, especially \fIvfork\fP and \fIabort\fP.
.SH "LIST OF FUNCTIONS"
.sp 2
.nf
.ta \w'setlinebuf'u+2n +\w'setbuf.3s'u+10n
\fIName\fP	\fIAppears on Page\fP	\fIDescription\fP
.ta \w'setlinebuf'u+4n +\w'setbuf.3s'u+4n
.sp 5p
clearerr	ferror.3s	stream status inquiries
fclose	fclose.3s	close or flush a stream
fdopen	fopen.3s	open a stream
feof	ferror.3s	stream status inquiries
ferror	ferror.3s	stream status inquiries
fflush	fclose.3s	close or flush a stream
fgetc	getc.3s	get character or word from stream
fgets	gets.3s	get a string from a stream
fileno	ferror.3s	stream status inquiries
fopen	fopen.3s	open a stream
fprintf	printf.3s	formatted output conversion
fputc	putc.3s	put character or word on a stream
fputs	puts.3s	put a string on a stream
fread	fread.3s	buffered binary input/output
freopen	fopen.3s	open a stream
fscanf	scanf.3s	formatted input conversion
fseek	fseek.3s	reposition a stream
ftell	fseek.3s	reposition a stream
fwrite	fread.3s	buffered binary input/output
getc	getc.3s	get character or word from stream
getchar	getc.3s	get character or word from stream
gets	gets.3s	get a string from a stream
getw	getc.3s	get character or word from stream
printf	printf.3s	formatted output conversion
putc	putc.3s	put character or word on a stream
putchar	putc.3s	put character or word on a stream
puts	puts.3s	put a string on a stream
putw	putc.3s	put character or word on a stream
rewind	fseek.3s	reposition a stream
scanf	scanf.3s	formatted input conversion
setbuf	setbuf.3s	assign buffering to a stream
setbuffer	setbuf.3s	assign buffering to a stream
setlinebuf	setbuf.3s	assign buffering to a stream
sprintf	printf.3s	formatted output conversion
sscanf	scanf.3s	formatted input conversion
ungetc	ungetc.3s	push character back into input stream
.fi
E 2
E 1
