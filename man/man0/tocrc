#!/bin/sh -
#
# Copyright (c) 1980 Regents of the University of California.
# All rights reserved.  The Berkeley software License Agreement
# specifies the terms and conditions for redistribution.
#
#	@(#)tocrc	6.3 (Berkeley) 10/21/04
#
tmp=/tmp/toc$$
trap "rm $tmp ; exit" 2 3 15
if [ $# -eq 1 -a $1 = "1" ]
then
	: create toc input file for section 1 only

	( cd ../man1 ; /usr/lib/getNAME -t `ls *.1 *.1? | sort` | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../man0/tocx1
	)
elif [ $# -eq 1 -a $1 = "2" ]
then
	: create toc input file for section 2 only

	( cd ../man2 ; /usr/lib/getNAME -t *.2 | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../man0/tocx2
	)
elif [ $# -eq 1 -a $1 = "3" ]
then
	: create toc input file for section 3 only

	( cd ../man3 ; /usr/lib/getNAME -t `ls *.3 *.3[mnsxc] | sort` | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../man0/tocx3
	)
elif [ $# -eq 1 -a $1 = "3f" ]
then
	: create toc input file for section 3F only

	( cd ../man3/man3f ;
		/usr/lib/getNAME -t *.3f | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../../man0/tocx3f
	)
elif [ $# -eq 1 -a $1 = "4" ]
then
	: create toc input file for section 4 only

	mkdir sym
	(cd sym; for i in ../../man4/*.4; do ln -s $i .; done;
		for i in ../../man4/*.4?; do ln -s $i .; done;
		for i in ../../man4/vax/*.4; do ln -s $i .; done;
		/usr/lib/getNAME -t *.* | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../tocx4
	)
	rm -rf sym
elif [ $# -eq 1 -a $1 = "5" ]
then
	: create toc input file for section 5 only

	( cd ../man5 ; /usr/lib/getNAME -t *.5 | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../man0/tocx5
	)
elif [ $# -eq 1 -a $1 = "6" ]
then
	: create toc input file for section 6 only

	( cd ../man6 ; /usr/lib/getNAME -t *.6 | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../man0/tocx6
	)
elif [ $# -eq 1 -a $1 = "7" ]
then
	: create toc input file for section 7 only

	( cd ../man7 ; /usr/lib/getNAME -t *.7 | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../man0/tocx7
	)
elif [ $# -eq 1 -a $1 = "8" ]
then
	: create toc input file for section 8 only

	mkdir sym
	(cd sym; for i in ../../man8/*.8; do ln -s $i .; done;
		for i in ../../man8/*.8?; do ln -s $i .; done;
		for i in ../../man8/vax/*.8; do ln -s $i .; done;
		for i in ../../man8/vax/*.8?; do ln -s $i .; done;
		/usr/lib/getNAME -t *.* | sed \
			-e 's/.s-2//g' \
			-e 's/.s-1//g' \
			-e 's/.s0//g' \
			-e 's/.s+1//g' \
			-e 's/  *.-  */: /' \
			-e 's/ *$/./' \
			-e 's/.TH.*	//' \
			-e 's/.th.*	//' \
		> ../tocx8
	)
	rm -rf sym
else case $1 in
	all )
		:   tocx files for all sections and everything else

		for x in 1 2 3 3f 4 5 6 7 8
			do
			./$0 $x
			done
		./$0 t
		;;
	t )
		:   permuted index and toc files

		if [ ! -f tocx1 ]
		then
			echo "tocx* files missing; must run tocrc all first"
			exit
		fi
		sed \
			-e 's/(1c)/(1C)/' \
			-e 's/(1g)/(1G)/' \
			-e 's/(3c)/(3C)/' \
			-e 's/(3m)/(3M)/' \
			-e 's/(3n)/(3N)/' \
			-e 's/(3s)/(3S)/' \
			-e 's/(3x)/(3X)/' \
			-e 's/(3f)/(3F)/' \
			-e 's/(4f)/(4F)/' \
			-e 's/(4n)/(4N)/' \
			-e 's/(4p)/(4P)/' \
			-e 's/(8c)/(8C)/' \
			-e 's/(8v)/(8V)/' \
			-e '/"\."/d' \
			tocx* cshcmd \
		> /tmp/cattoc

		ptx -r -t -b break -f -w 108 -i ignore \
		    /tmp/cattoc ptxx

		for x in 1 2 3 3f 4 5 6 7 8
		do
			< tocx$x grep '^intro' >$tmp
				sed \
				-e '2,${' \
				-e '/^intro/d' \
				-e '}' \
				-e 's/ .*://' \
				-e 's/.$//' \
				-e 's/([^)]*) /" "/' \
				-e 's/.*/.xx "&"/' \
				-e '/""/d' \
				$tmp tocx$x \
			>toc$x
		done
		;;
	* )
		echo "what do you want to do?"
		;;
	esac
fi
exit
