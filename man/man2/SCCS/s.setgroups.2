h06111
s 00001/00001/00050
d D 6.4 87/04/10 10:07:30 bostic 5 4
c initgroups is 3, not 3X
e
s 00006/00000/00045
d D 6.3 86/05/13 15:01:48 karels 4 3
c mention gid_t
e
s 00001/00001/00044
d D 6.2 86/04/20 03:45:27 lepreau 3 2
c NGRPS -> NGROUPS
e
s 00001/00001/00044
d D 6.1 85/05/15 11:59:40 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00045/00000/00000
d D 5.1 85/05/15 11:59:33 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH SETGROUPS 2 "7 July 1983"
E 2
I 2
.TH SETGROUPS 2 "%Q%"
E 2
.UC 5
.SH NAME
setgroups \- set group access list
.SH SYNOPSIS
.nf
.ft B
#include <sys/param.h>
.PP
.ft B
setgroups(ngroups, gidset)
int ngroups, *gidset;
.fi
.SH DESCRIPTION
.I Setgroups
sets the group access list of the current user process
according to the array 
.IR gidset .
The parameter
.I ngroups
indicates the number of entries in the array and must be no
D 3
more than NGRPS, as defined in
E 3
I 3
more than NGROUPS, as defined in
E 3
.RI < sys/param.h >.
.PP
Only the super-user may set new groups.
.SH "RETURN VALUE
A 0 value is returned on success, \-1 on error, with
a error code stored in \fIerrno\fP.
.SH "ERRORS
The \fIsetgroups\fP call will fail if:
.TP 15
[EPERM]
The caller is not the super-user.
.TP 15
[EFAULT]
The address specified for \fIgidset\fP is outside the process
address space.
.SH "SEE ALSO
D 5
getgroups(2), initgroups(3X)
E 5
I 5
getgroups(2), initgroups(3)
E 5
I 4
.SH BUGS
The
.I gidset
array should be of type
.BR gid_t ,
but remains integer for compatibility with earlier systems.
E 4
E 1
